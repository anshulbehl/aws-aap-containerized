---
- name: Teardown AWS Infrastructure for AAP
  hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ playbook_dir }}/../../extra-vars.yml"

  tasks:
    - name: Get EC2 instance information
      amazon.aws.ec2_instance_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}"
          "instance-state-name": ["running", "stopped"]
      register: ec2_instances

    - name: Terminate EC2 instance
      amazon.aws.ec2_instance:
        instance_ids: "{{ item.instance_id }}"
        state: absent
        region: "{{ aws_region }}"
        wait: true
      loop: "{{ ec2_instances.instances }}"
      when: ec2_instances.instances | length > 0

    - name: Delete key pair
      amazon.aws.ec2_key:
        name: "{{ instance_name }}-key"
        state: absent
        region: "{{ aws_region }}"

    - name: Get security group information
      amazon.aws.ec2_security_group_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}-sg"
      register: security_groups

    - name: Delete security group
      amazon.aws.ec2_security_group:
        group_id: "{{ item.group_id }}"
        state: absent
        region: "{{ aws_region }}"
      loop: "{{ security_groups.security_groups }}"
      when: security_groups.security_groups | length > 0

    - name: Get subnet information
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}-subnet"
      register: subnets

    - name: Delete subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ item.vpc_id }}"
        cidr: "{{ item.cidr_block }}"
        state: absent
        region: "{{ aws_region }}"
      loop: "{{ subnets.subnets }}"
      when: subnets.subnets | length > 0

    - name: Get route table information
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}-route-table"
      register: route_tables

    - name: Delete route table
      amazon.aws.ec2_vpc_route_table:
        route_table_id: "{{ item.route_table_id }}"
        lookup: id
        state: absent
        region: "{{ aws_region }}"
      loop: "{{ route_tables.route_tables }}"
      when: route_tables.route_tables | length > 0

    - name: Get internet gateway information
      amazon.aws.ec2_vpc_igw_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}-igw"
      register: igws

    - name: Detach and delete internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ item.attachments[0].vpc_id }}"
        state: absent
        region: "{{ aws_region }}"
      loop: "{{ igws.internet_gateways }}"
      when:
        - igws.internet_gateways | length > 0
        - item.attachments | length > 0

    - name: Get VPC information
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}-vpc"
      register: vpcs

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        vpc_id: "{{ item.vpc_id }}"
        state: absent
        region: "{{ aws_region }}"
      loop: "{{ vpcs.vpcs }}"
      when: vpcs.vpcs | length > 0

    - name: Clean up local files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ playbook_dir }}/../../files/{{ instance_name }}-key.pem"
        - "{{ playbook_dir }}/../../files/{{ instance_name }}-info.txt"
        - "{{ playbook_dir }}/../../inventory/hosts.yml"
      ignore_errors: true

    - name: Display teardown completion
      ansible.builtin.debug:
        msg: |
          AWS Infrastructure teardown completed!

          Removed resources:
          - EC2 instance: {{ instance_name }}
          - VPC and associated networking components
          - Security groups and key pairs
          - Local key files and inventory 